<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<!-- Default main sequence shipped with the WSO2 ESB -->
<sequence xmlns="http://ws.apache.org/ns/synapse" name="main" onError="fault">
    <description>The main sequence for the message mediation</description>
    <in>
        <property name="SERVICE_PREFIX" expression="$axis2:SERVICE_PREFIX"/>
        <send>
	          <endpoint name="tenantAwareLBEndpoint">
                <class name ="org.apache.stratos.lb.endpoint.endpoint.TenantAwareLoadBalanceEndpoint">
                     <parameter name="algorithmClassName">org.apache.stratos.lb.endpoint.algorithm.RoundRobin</parameter>
                     <parameter name="failover">true</parameter>
                     <parameter name="sessionAffinity">true</parameter>
                     <parameter name="sessionTimeout">90000</parameter>
                     <!-- parameter name="configuration">$system:loadbalancer.conf</parameter -->
  	            </class>
 	          </endpoint>
        </send>
        <drop/>
    </in>
    <out>
        <!-- Add response interceptor mediator -->
        <class name="org.apache.stratos.lb.endpoint.mediators.ResponseInterceptor">
        </class>

        <!-- Updating location value in response header -->
        <filter source="$trp:Location" regex=".+">
            <property name="LB_SP_HOST_NAME" expression="$ctx:SERVICE_PREFIX"
                      pattern="(^http.?://\b)(.*):(\d*)(.*)" group="2"/>
            <property name="EP_RESPONSE_LOC_PROTOCOL" expression="$trp:Location"
                      pattern="(^http.?://\b)(.*):(\d*)(.*)" group="1"/>
            <property name="EP_RESPONSE_LOC_HOST_NAME" expression="$trp:Location"
                      pattern="(^http.?://\b)(.*):(\d*)(.*)" group="2"/>
            <property name="EP_RESPONSE_LOC_PATH" expression="$trp:Location"
                      pattern="(^http.?://\b)(.*):(\d*)(.*)" group="4"/>

            <switch source="fn:lower-case($ctx:EP_RESPONSE_LOC_PROTOCOL)">
                <case regex="https://">
                    <property name="Location"
                              expression="fn:concat($ctx:EP_RESPONSE_LOC_PROTOCOL,$ctx:LB_HOST_NAME,':',$ctx:LB_HTTPS_PORT,$ctx:EP_RESPONSE_LOC_PATH)"
                              scope="transport"/>
                </case>
                <case regex="http://">
                    <property name="Location"
                              expression="fn:concat($ctx:EP_RESPONSE_LOC_PROTOCOL,$ctx:LB_HOST_NAME,':',$ctx:LB_HTTP_PORT,$ctx:EP_RESPONSE_LOC_PATH)"
                              scope="transport"/>
                </case>
            </switch>
        </filter>

        <!-- Send the response to the client -->
        <send/>
        <drop/>
    </out>
</sequence>
