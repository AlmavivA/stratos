/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import org.wso2.stratos.throttling.manager.dataobjects.*;
import org.wso2.stratos.common.constants.*;

rule restrictCapacity
when

$dataContext : ThrottlingDataContext()
eval($dataContext.getDataLong(ThrottlingDataEntryConstants.TENANT_CAPACITY) > 12)

then

ThrottlingAccessValidation validation = $dataContext.getAccessValidation();
long tenantCapacity = $dataContext.getDataLong(ThrottlingDataEntryConstants.TENANT_CAPACITY);
validation.setTenantBlocked(StratosConstants.THROTTLING_IN_DATA_ACTION, true,
            "Your resource volume is big. Bigger than 12. your value: " + tenantCapacity);

end
