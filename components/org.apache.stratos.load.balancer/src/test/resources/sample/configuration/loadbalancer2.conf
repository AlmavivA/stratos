#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#  
#  http://www.apache.org/licenses/LICENSE-2.0
#  
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
#  specific language governing permissions and limitations
#  under the License.

# Load balancer test configuration
# ----------------------------------
# Test case: Verify topology-event-listener-enabled = false scenario

loadbalancer {

    # Default load balancing algorithm
    # Refer algorithm name from algorithms section.
    algorithm: round-robin;

    # Enable/disable failover handling
    # If failover handling is enabled load balancer will retry requests on all members in a
    # given cluster if the selected member fails to respond.
    failover: true;

    # Enable/disable session affinity
    # If session affinity is enabled load balancer will track all outgoing sessions and delegate
    # incoming requests to members with same sessions.
    session-affinity: true;

    # Session timeout in milli-seconds
    session-timeout: 90000;

    # Enable/disable topology event listener
    # If this property is set to true, load balancer will listen to topology events and build
    # the topology configuration accordingly. If not static configuration given in the services
    # section will be used.
    topology-event-listener-enabled: false;

    # Message broker endpoint
    # Provide message broker ip address and port if topology_event_listener_enabled is set to true.
    # mb-ip: localhost;
    # mb-port: 5677;

    # Enable/disable cep statistics publisher
    cep-stats-publisher-enabled: true;

    # Complex event processor endpoint
    # Provide CEP ip address and port if stats_publisher_enabled is set to true.
    cep-ip: localhost;
    cep-port: 7615;

    # Load balancing defaultAlgorithmName class names.
    algorithms {
        round-robin {  # defaultAlgorithmName name
            class-name: org.apache.stratos.load.balancer.defaultAlgorithmName.RoundRobin;
        }
    }

    services {
        app-server {  # service name, a unique identifier to identify a service
            clusters {
                app-server-cluster1 {  # cluster id, a unique identifier to identify a cluster
                    hosts: cluster1.appserver.foo.org;  # comma separated hostname list
                    defaultAlgorithmName: round-robin;  # defaultAlgorithmName name
                    members {
                        m1 {  # member id, a unique identifier to identify a member
                            ip: 10.0.0.10; # member ip address
                            ports {
                                http {
                                    value: 8080; # application port
                                    proxy: 80;   # proxy port exposed by load balancer transport
                                }
                                https {
                                    value: 8090;
                                    proxy: 443;
                                }
                            }
                        }
                        m2 {
                            ip: 10.0.0.11;
                            ports {
                                http {
                                    value: 8080;
                                    proxy: 80;
                                }
                                https {
                                    value: 8090;
                                    proxy: 443;
                                }
                            }
                        }
                        m3 {
                            ip: 10.0.0.12;
                            ports {
                                http {
                                    value: 8080;
                                    proxy: 80;
                                }
                                https {
                                    value: 8090;
                                    proxy: 443;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
